-- What is SQL? -------> Structured Query Language
-- What is programming language we use to communicate with databaases
-- What is a Database?
-- The place where we can store our data is known as databse
-- What is Data?
-- The collection of continous or discrete values is known as data
-- What is RDBMS?
-- In RDBMS the data is stored in the form of rows and columns
-- Rows is also known as -----> records, index, tuples....etc
-- Columns is also known as attributes, variables....etc
-- We are storing the data in to database. These databases consist of different types of DB's languages
-- DDL - CREATE, ALTER, DROP, TRUNCATE - DATA DEFINATION LANGUAGE
-- DML - INSERT, UPDATE, DELETE -DATA MANUPULATION LANGUAGE
-- DQL - SELECT - DATA QUERY LANGUAGE
-- DCL - GRANT, REVOKE - DATA CONTROL LANGUAGE
-- TCL - COMMIT, ROLLBACK, SAVEPOINT - TRANSACTION CONTROL LANGUAGE

-- CREATE A DATABASE NAME GENAI
CREATE DATABASE GENAI;
-- USE THE DATABASE GENAI
USE GENAI;
-- WHAT IS A SCHEMAS
-- BLUEPRINT OF DATABASE IS KNOWN AS SCHEMAS
-- CREATE A TABLE CUSTOMERS WHERE IT IS HAVING ATTRIBUTES CUST_ID,F_NAME,L_NAME,COUNTRY,PH_NO
CREATE TABLE CUSTOMERS (CUST_ID VARCHAR(10), F_NAME VARCHAR(25),L_NAME VARCHAR(25),COUNTRY VARCHAR(25),PH_NO INT);
-- DROP THE DATABASE GENAI
DROP DATABASE GENAI;
-- RECREATE THE SAME DATABASE AND THE TABLES
CREATE DATABASE GENAI;
USE GENAI;
CREATE TABLE CUSTOMERS (CUST_ID INT, F_NAME VARCHAR(25),L_NAME VARCHAR(25),COUNTRY VARCHAR(25),PH_NO INT);
-- INSERT THE DATA INTO CUSTOMERS
-- DML - INSERT
INSERT INTO CUSTOMERS(CUST_ID , F_NAME ,L_NAME ,COUNTRY ,PH_NO ) VALUES ('1','HARSHITH','SAI','INDIA',970428131);
SELECT * FROM CUSTOMERS;
-- I WANT TO DELETE ALL THE DATA FROM TABLES OR CLEAR ALL THE DATA
TRUNCATE CUSTOMERS;
SELECT * FROM CUSTOMERS;
-- WHAT IS THE DIFFERENCE BETWEEN TRUNCATE AND DROP?
DELETE FROM CUSTOMERS WHERE CUST_ID='4';
-- ################################################################################################################ --
-- 11/06/2025
USE GENAI;
INSERT INTO CUSTOMERS(CUST_ID , F_NAME ,L_NAME ,COUNTRY ,PH_NO ) VALUES ('1','HARSHITH','SAI','INDIA',970428131),
('2','NIDHI','P','INDIA',123456789),
('3','PETE','P','INDIA',987654321),
('4','TONY','S','INDIA',543219876);
SELECT * FROM CUSTOMERS;
CREATE TABLE STUDENTS (CUST_ID INT, S_NAME VARCHAR(25),S_MARKS INT);
INSERT INTO STUDENTS VALUES (101,'ALEX',55),
(102,'STEVE',60),
(103,'TOKYO',70),
(104,'BILL',80),
(105,'TOM',90),
(106,'KUREV',56),
(107,'STARK',94),
(108,'MARK',78),
(109,'JOHN',88),
(110,'GILL',48);
SELECT * FROM STUDENTS;
-- PRINT THE FIRST ROW FROM THE STUDENTS TABLE
SELECT * FROM STUDENTS WHERE S_ID=101;
-- PRINT THE RECORDS OF STUDENTS WHERE MARKS ARE GREATER THAN 75
SELECT * FROM STUDENTS WHERE S_MARKS > 75;
-- THE DATA ABOUT JOHN
SELECT * FROM STUDENTS WHERE S_NAME = 'JOHN';
-- 1. RELATIONAL OPERATORS/ COMPARISTION OPERATORS ---> =,!=,<,>,<=,>=
SELECT * FROM STUDENTS WHERE S_MARKS != 75;
-- GET THE RECORDS OF THE STUDENTS WHOSE MARKS BETWEEN 60 AND 75
SELECT * FROM STUDENTS WHERE S_MARKS >= 60 AND S_MARKS <= 75;
-- GET THE RECORDS OF THE STUDENTS WHOSE MARKS BETWEEN 60 AND 75 USING BETWEEN
SELECT * FROM STUDENTS WHERE S_MARKS BETWEEN 60 AND 75;
-- GET THE RECORDS OF THE STUDENT WHOSE NAME STARTS WITH LETTER 'S'
-- LIKE OPERATOR USE % SYMBOL TO MATCH THE RECORD
SELECT * FROM STUDENTS WHERE S_NAME LIKE 'S%';
-- WHAT DO WE DO WHEN WE DONT KNOW THE FIRST 2 LETTERS AND WE KNOW NEXT LETTER STARTS WITH 'EV'
SELECT * FROM STUDENTS WHERE S_NAME LIKE '__EV%';
-- GET THE RECORDS OF THE STUDENTS WHOSE HAVING LETTER 'E'
SELECT * FROM STUDENTS WHERE S_NAME LIKE '%E%' ;
-- GET THE RECORS OF STUDENT ID 105 ,102 AND 107
SELECT * FROM STUDENTS WHERE S_ID = 105 OR S_ID = 102 OR S_ID = 107;
-- CHECK IT BY USING THE 'IN' OPERATOR
SELECT * FROM STUDENTS WHERE S_ID IN(102,105,106);
-- GET ALL THE RECORDS OF ALL THE STUDENTS EXCEPT FOR 102,103,107,108
SELECT * FROM STUDENTS WHERE S_ID  NOT IN(102,103,107,108);
-- WITH NOT EQUALS(!=) AND 'AND' OPERATOR
SELECT * FROM STUDENTS WHERE S_ID != 105 AND S_ID != 102 AND S_ID != 107;
DROP TABLE CUSTOMERS;
CREATE TABLE customer (
customer_id integer primary key,
first_name varchar(10) NOT NULL,
last_name varchar(10) NOT NULL,
dob DATE,
phone varchar(12)
);
-- DEFAULT DATE FORMAT --> YYYY-MM-DD
Insert into customer values(1,'John','Brown','1965-01-01','800-555-1211'),
(2,'Cynthia','Green','1968-02-05','800-555-1212'),
(3,'Steve','White','1971-03-16','800-555-1213'),
(4,'Gail','Black',NULL,'800-555-1214'),
(5,'Doreen','Blue','1970-05-20',NULL);
-- GET THE RECORDS OF A CUSTOMER LAST NAME STARTS WITH 'BL'
-- GET THE RECORDS OF A CUSTOMER WHOSE FIRST NAME AND LAST NAME CONTAINS 'ee'
-- GET THE RECORDS OF A CUSTOMER WHOSE PHONE NUMBER ENDS WITH 12
-- GET THE RECORDS OF A CUSTOMER WHO DONT HAVE DOB
-- MERGE THE FIRST AND LAST NAME TOGETHER AND PRINT IT AS A CUSTOMER FULL NAME

SELECT * FROM CUSTOMER WHERE last_name LIKE 'BL%';

SELECT * FROM CUSTOMER WHERE first_name LIKE '%ee%' OR last_name LIKE '%ee%' ;

SELECT * FROM CUSTOMER WHERE phone LIKE '%12';

SELECT * FROM CUSTOMER WHERE dob is null;

SELECT * FROM CUSTOMER ;

SELECT CONCAT(first_name,last_name) AS full_name from customer;




